---

- name: Create elasticsearch CA cert folder
  file:
    path: "{{ kibana_elastic_certificates_dir }}"
    state: directory
    owner: "{{ kibana_user }}"
    group: "{{ kibana_group }}"
    mode: 0o750
  changed_when: false

- name: Check if Elasticsearch CA cert files exist
  stat:
    path: "{{ kibana_elastic_certificates_dir }}/{{ item.value | basename }}"
  register: cert_files
  loop: "{{ kibana_elastic_certificates | dict2items }}"

- name: Upload Elasticsearch CA cert files
  copy:
    src: "{{ item.value }}"
    dest: "{{ kibana_elastic_certificates_dir }}/{{ item.value | basename }}"
    owner: "{{ kibana_group if item.key == 'key' else kibana_user }}"
    group: "{{ kibana_group }}"
    mode: "{{ '0o400' if item.key == 'key' else '0o640' }}"
  when: not (cert_files.results[item.index].stat.exists)
  loop: "{{ kibana_elastic_certificates | dict2items }}"
  loop_control:
    index_var: index


- name: Configure Kibana to use the elasticsearch certificates
  set_fact:
    kibana_combined_config: >-
      {{
        _kibana_cert_settings |
        combine(kibana_combined_config, recursive=true)
      }}
  vars:
    _kibana_cert_settings:
      elasticsearch:
        ssl:
          verificationMode: certificate
          key: "{{ kibana_elastic_certificates_dir }}/{{
                            kibana_elastic_certificates.key | basename }}"
          certificate: "{{ kibana_elastic_certificates_dir }}/{{
                            kibana_elastic_certificates.crt | basename }}"
          certificateAuthorities:
            - "{{ kibana_elastic_certificates_dir }}/{{
                        kibana_elastic_certificates.ca | basename }}"
